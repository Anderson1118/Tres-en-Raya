/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tresenraya;

import javax.swing.JOptionPane;

/**
 *
 * @author Programador
 */
public class Tablero extends javax.swing.JFrame {

    /**
     * Creates new form Tablero
     */
    String[][] matriz=new String[4][4];
    int mejorfila, mejorcolumna;
    public Tablero() {
        initComponents();
        InicializarMatriz();
        this.setLocationRelativeTo(null);
    }
    
    private void InicializarMatriz(){
        matriz[1][1]="-";
        matriz[1][2]="-";
        matriz[1][3]="-";
        matriz[2][1]="-";
        matriz[2][2]="-";
        matriz[2][3]="-";
        matriz[3][1]="-";
        matriz[3][2]="-";
        matriz[3][3]="-";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        turno = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        compu = new javax.swing.JTextField();
        human = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        facil = new javax.swing.JCheckBox();
        normal = new javax.swing.JCheckBox();
        dios = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        unouno = new javax.swing.JLabel();
        unodos = new javax.swing.JLabel();
        unotre = new javax.swing.JLabel();
        dosuno = new javax.swing.JLabel();
        dosdos = new javax.swing.JLabel();
        treuno = new javax.swing.JLabel();
        tredos = new javax.swing.JLabel();
        tretre = new javax.swing.JLabel();
        dostre = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tres en raya");
        setBackground(new java.awt.Color(255, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setText("Nuevo juego");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 204), 3, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Turno de:");

        turno.setEditable(false);
        turno.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        turno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        turno.setText("Humano");

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Puntaje"));
        jPanel1.setOpaque(false);

        jLabel2.setText("Humano:");

        jLabel3.setText("Computador:");

        compu.setEditable(false);
        compu.setText("0");
        compu.setOpaque(false);
        compu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compuActionPerformed(evt);
            }
        });

        human.setEditable(false);
        human.setText("0");
        human.setOpaque(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(human, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(compu)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(compu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(human, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 51, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dificultad"));
        jPanel2.setOpaque(false);

        facil.setText("Nivel facil");
        facil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facilActionPerformed(evt);
            }
        });

        normal.setText("Nivel normal");
        normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalActionPerformed(evt);
            }
        });

        dios.setText("Nivel Â¡Imposible!");
        dios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facil)
                    .addComponent(normal)
                    .addComponent(dios))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(facil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(normal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dios))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Juego"));

        unouno.setBackground(new java.awt.Color(255, 102, 102));
        unouno.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        unouno.setForeground(new java.awt.Color(0, 0, 0));
        unouno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        unouno.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        unouno.setName("unouno"); // NOI18N
        unouno.setOpaque(true);
        unouno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unounoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                unounoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                unounoMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                unounoMouseReleased(evt);
            }
        });

        unodos.setBackground(new java.awt.Color(255, 102, 102));
        unodos.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        unodos.setForeground(new java.awt.Color(0, 0, 0));
        unodos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        unodos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        unodos.setName("unodos"); // NOI18N
        unodos.setOpaque(true);
        unodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unodosMouseClicked(evt);
            }
        });

        unotre.setBackground(new java.awt.Color(255, 102, 102));
        unotre.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        unotre.setForeground(new java.awt.Color(0, 0, 0));
        unotre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        unotre.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        unotre.setName("unotre"); // NOI18N
        unotre.setOpaque(true);
        unotre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unotreMouseClicked(evt);
            }
        });

        dosuno.setBackground(new java.awt.Color(255, 102, 102));
        dosuno.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        dosuno.setForeground(new java.awt.Color(0, 0, 0));
        dosuno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dosuno.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        dosuno.setName("dosuno"); // NOI18N
        dosuno.setOpaque(true);
        dosuno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dosunoMouseClicked(evt);
            }
        });

        dosdos.setBackground(new java.awt.Color(255, 102, 102));
        dosdos.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        dosdos.setForeground(new java.awt.Color(0, 0, 0));
        dosdos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dosdos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        dosdos.setName("dosdos"); // NOI18N
        dosdos.setOpaque(true);
        dosdos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dosdosMouseClicked(evt);
            }
        });

        treuno.setBackground(new java.awt.Color(255, 102, 102));
        treuno.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        treuno.setForeground(new java.awt.Color(0, 0, 0));
        treuno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        treuno.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        treuno.setName("treuno"); // NOI18N
        treuno.setOpaque(true);
        treuno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treunoMouseClicked(evt);
            }
        });

        tredos.setBackground(new java.awt.Color(255, 102, 102));
        tredos.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        tredos.setForeground(new java.awt.Color(0, 0, 0));
        tredos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tredos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        tredos.setName("tredos"); // NOI18N
        tredos.setOpaque(true);
        tredos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tredosMouseClicked(evt);
            }
        });

        tretre.setBackground(new java.awt.Color(255, 102, 102));
        tretre.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        tretre.setForeground(new java.awt.Color(0, 0, 0));
        tretre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tretre.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 4, true));
        tretre.setName("tretre"); // NOI18N
        tretre.setOpaque(true);
        tretre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tretreMouseClicked(evt);
            }
        });

        dostre.setBackground(new java.awt.Color(255, 102, 102));
        dostre.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        dostre.setForeground(new java.awt.Color(0, 0, 0));
        dostre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dostre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 4));
        dostre.setName("dostre"); // NOI18N
        dostre.setOpaque(true);
        dostre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dostreMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(unouno, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(unodos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(unotre, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dosuno, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dosdos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dostre, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(treuno, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tredos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tretre, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(unodos, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(unotre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(unouno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dosuno, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addComponent(dosdos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(dostre, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tredos, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addComponent(tretre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(treuno, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(turno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(turno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unounoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unounoMouseClicked
        // TODO add your handling code here:
        if((this.unouno.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[1][1] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.unouno.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[1][1]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
            
        else if ((this.unouno.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(dios.isSelected())) {
            this.matriz[1][1] = "X";
            impTablero();
            Maquina m = new Maquina();
            this.turno.setText("Maquina");
            m.NivelDios(1, this);
            this.matriz[this.mejorfila][this.mejorcolumna] = "O";
            impTablero();
            this.turno.setText("Humano"); 
            Evaluar(m);
      }
    }//GEN-LAST:event_unounoMouseClicked

    
    private void unounoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unounoMouseReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_unounoMouseReleased

    private void unounoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unounoMouseEntered
        // TODO add your handling code here:
         /*if(unouno.getText().equals("")){
             band=true;
            if(turno.getText().equals("Humano")) unouno.setText("X");
        }*/
    }//GEN-LAST:event_unounoMouseEntered

    private void unounoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unounoMouseExited
        // TODO add your handling code here:
        /*if(band==true)unouno.setText("");
        band=false;*/
    }//GEN-LAST:event_unounoMouseExited

    private void unodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unodosMouseClicked
        // TODO add your handling code here:
        if((this.unodos.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[1][2] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.unodos.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[1][2]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        if ((this.unodos.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[1][2] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_unodosMouseClicked

    private void unotreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unotreMouseClicked
        // TODO add your handling code here:
        if((this.unotre.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[1][3] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.unotre.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[1][3]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        if ((this.unotre.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[1][3] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_unotreMouseClicked

    private void dosunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dosunoMouseClicked
        // TODO add your handling code here:
        if((this.dosuno.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[2][1] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.dosuno.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[2][1]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        if ((this.dosuno.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[2][1] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_dosunoMouseClicked

    private void dosdosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dosdosMouseClicked
        // TODO add your handling code here:
        if((this.dosdos.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[2][2] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.dosdos.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[2][2]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        if ((this.dosdos.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[2][2] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_dosdosMouseClicked

    private void dostreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dostreMouseClicked
        // TODO add your handling code here:
        if((this.dostre.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[2][3] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.dostre.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[2][3]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        if ((this.dostre.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[2][3] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_dostreMouseClicked

    private void treunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treunoMouseClicked
        // TODO add your handling code here:
        if((this.treuno.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[3][1] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.treuno.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[3][1]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        if ((this.treuno.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[3][1] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_treunoMouseClicked

    private void tredosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tredosMouseClicked
        // TODO add your handling code here:
        if((this.tredos.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[3][2] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.tredos.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[3][2]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
      if ((this.tredos.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[3][2] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_tredosMouseClicked

    private void tretreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tretreMouseClicked
        // TODO add your handling code here:
        if((this.tretre.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(facil.isSelected())){
            this.matriz[3][3] = "X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelFacil(0,1,this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        else if((this.tretre.getText().equals("")) && (this.turno.getText().equals("Humano")) &&(normal.isSelected())){
            this.matriz[3][3]="X";
            impTablero();
            Maquina m=new Maquina();
            this.turno.setText("Maquina");
            m.NivelNormal(0, 1, this);
            this.matriz[this.mejorfila][this.mejorcolumna]="O";
            impTablero();
            this.turno.setText("Humano");
            Evaluar(m);
        }
        
        if ((this.tretre.getText().equals("")) && (this.turno.getText().equals("Humano"))&&(dios.isSelected())) {
      this.matriz[3][3] = "X";
      impTablero();
      Maquina m = new Maquina();
      this.turno.setText("Maquina");
      m.NivelDios(1, this);
      this.matriz[this.mejorfila][this.mejorcolumna] = "O";
      impTablero();
      this.turno.setText("Humano");
      Evaluar(m);
    }
    }//GEN-LAST:event_tretreMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        InicializarMatriz();
        NuevaPartida();
        human.setText("0");
        compu.setText("0");
        facil.setSelected(false);
        normal.setSelected(false);
        dios.setSelected(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void compuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_compuActionPerformed

    private void facilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facilActionPerformed
        // TODO add your handling code here:
        normal.setSelected(false);
        dios.setSelected(false);
        human.setText("0");
        compu.setText("0");
        NuevaPartida();
        InicializarMatriz();
    }//GEN-LAST:event_facilActionPerformed

    private void diosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diosActionPerformed
        // TODO add your handling code here:
        facil.setSelected(false);
        normal.setSelected(false);
        human.setText("0");
        compu.setText("0");
        NuevaPartida();
        InicializarMatriz();
    }//GEN-LAST:event_diosActionPerformed

    private void normalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalActionPerformed
        // TODO add your handling code here:
        facil.setSelected(false);
        dios.setSelected(false);
        human.setText("0");
        compu.setText("0");
        NuevaPartida();
        InicializarMatriz();
    }//GEN-LAST:event_normalActionPerformed
    public void Evaluar(Maquina m){
        if(m.eval(this)==-1) {
                JOptionPane.showMessageDialog(this, "Usted es el ganador"); 
                NuevaPartida();
                InicializarMatriz();
                human.setText((Integer.parseInt(human.getText())+1)+"");
            }
            else if(m.eval(this)==1) {
                JOptionPane.showMessageDialog(this, "Usted es el perdedor"); 
                NuevaPartida();
                InicializarMatriz();
                compu.setText((Integer.parseInt(compu.getText())+1)+"");
            }
            else if(m.eval(this)==0) {
                JOptionPane.showMessageDialog(this, "Â¡Empate!"); 
                NuevaPartida();
                InicializarMatriz();
            }
    }
    public void NuevaPartida(){
        unouno.setText("");
        unodos.setText("");
        unotre.setText("");
        dosuno.setText("");
        dosdos.setText("");
        dostre.setText("");
        treuno.setText("");
        tredos.setText("");
        tretre.setText("");
    }
    public void impTablero(){
        if(!matriz[1][1].equals("-"))unouno.setText(matriz[1][1]);
        if(!matriz[1][2].equals("-"))unodos.setText(matriz[1][2]);
        if(!matriz[1][3].equals("-"))unotre.setText(matriz[1][3]);
        if(!matriz[2][1].equals("-"))dosuno.setText(matriz[2][1]);
        if(!matriz[2][2].equals("-"))dosdos.setText(matriz[2][2]);
        if(!matriz[2][3].equals("-"))dostre.setText(matriz[2][3]);
        if(!matriz[3][1].equals("-"))treuno.setText(matriz[3][1]);
        if(!matriz[3][2].equals("-"))tredos.setText(matriz[3][2]);
        if(!matriz[3][3].equals("-"))tretre.setText(matriz[3][3]);
                
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField compu;
    private javax.swing.JCheckBox dios;
    private javax.swing.JLabel dosdos;
    private javax.swing.JLabel dostre;
    private javax.swing.JLabel dosuno;
    private javax.swing.JCheckBox facil;
    private javax.swing.JTextField human;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JCheckBox normal;
    private javax.swing.JLabel tredos;
    private javax.swing.JLabel tretre;
    private javax.swing.JLabel treuno;
    private javax.swing.JTextField turno;
    private javax.swing.JLabel unodos;
    private javax.swing.JLabel unotre;
    private javax.swing.JLabel unouno;
    // End of variables declaration//GEN-END:variables
}
